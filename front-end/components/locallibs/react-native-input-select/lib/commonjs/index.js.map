{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_Input","_interopRequireDefault","_CheckBox","_Dropdown","_DropdownFlatList","_DropdownSectionList","_CustomModal","_colors","_constants","_utils","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","DropdownSelect","_ref","_extractPropertyFromA","_searchControls$textI","placeholder","label","error","helperText","options","optionLabel","optionValue","onValueChange","selectedValue","isMultiple","isSearchable","dropdownIcon","labelStyle","placeholderStyle","dropdownStyle","dropdownIconStyle","dropdownContainerStyle","dropdownErrorStyle","dropdownErrorTextStyle","dropdownHelperTextStyle","selectedItemStyle","multipleSelectedItemStyle","modalBackgroundStyle","modalOptionsContainerStyle","searchInputStyle","primaryColor","disabled","checkboxSize","checkboxStyle","checkboxLabelStyle","checkboxComponentStyles","checkboxComponent","listHeaderComponent","listFooterComponent","listComponentStyles","modalProps","hideModal","listControls","searchControls","rest","newOptions","setNewOptions","useState","open","setOpen","selectAll","setSelectAll","selectedItem","setSelectedItem","selectedItems","setSelectedItems","searchValue","setSearchValue","listIndex","setListIndex","itemIndex","sectionIndex","useEffect","Array","isArray","isSectionList","some","item","title","data","ListTypeComponent","DropdownSectionList","DropdownFlatList","modifiedSectionData","extractPropertyFromArray","flat","modifiedOptions","optLabel","DEFAULT_OPTION_LABEL","optValue","DEFAULT_OPTION_VALUE","handleSingleSelection","value","handleMultipleSelections","prevVal","_selectedValues","selectedValues","includes","filter","push","removeDisabledItems","items","handleSelectAll","filteredOptions","selectAllCallback","unselectAllCallback","checkSelectAll","useCallback","_removeDisabledItems","getSelectedItemsLabel","selectedLabels","forEach","element","_modifiedOptions$find","selectedItemLabel","find","onSearch","searchText","escapeRegExp","toString","toLocaleLowerCase","trim","regexFilter","RegExp","searchResults","searchSectionList","searchFlatList","flatList","toLowerCase","search","sectionList","map","listItem","filteredData","handleToggleModal","primary","colors","gray","setIndexOfSelectedItem","selectedLabel","_item$data","dataItem","createElement","Fragment","onRequestClose","ListHeaderComponent","onChangeText","text","style","textInputStyle","textInputContainerStyle","textInputProps","hideSelectAll","View","styles","optionsContainerStyle","TouchableOpacity","onPress","unselectAllText","selectAllText","onChange","ListFooterComponent","emptyListMessage","exports","StyleSheet","create","paddingHorizontal","paddingVertical","flexDirection","_default"],"sources":["index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { TouchableOpacity, StyleSheet, View } from 'react-native';\nimport Input from './components/Input';\nimport CheckBox from './components/CheckBox';\nimport Dropdown from './components/Dropdown/Dropdown';\nimport DropdownFlatList from './components/Dropdown/DropdownFlatList';\nimport DropdownSectionList from './components/Dropdown/DropdownSectionList';\nimport CustomModal from './components/CustomModal';\nimport { colors } from './styles/colors';\nimport { DEFAULT_OPTION_LABEL, DEFAULT_OPTION_VALUE } from './constants';\nimport type {\n  DropdownProps,\n  TFlatList,\n  TFlatListItem,\n  TSectionList,\n  TSectionListItem,\n} from './types/index.types';\nimport { escapeRegExp, extractPropertyFromArray } from './utils';\n\nexport const DropdownSelect: React.FC<DropdownProps> = ({\n  placeholder,\n  label,\n  error,\n  helperText,\n  options,\n  optionLabel,\n  optionValue,\n  onValueChange,\n  selectedValue,\n  isMultiple,\n  isSearchable,\n  dropdownIcon,\n  labelStyle,\n  placeholderStyle,\n  dropdownStyle,\n  dropdownIconStyle,\n  dropdownContainerStyle,\n  dropdownErrorStyle,\n  dropdownErrorTextStyle,\n  dropdownHelperTextStyle,\n  selectedItemStyle,\n  multipleSelectedItemStyle,\n  modalBackgroundStyle,\n  modalOptionsContainerStyle,\n  searchInputStyle, // kept for backwards compatibility\n  primaryColor,\n  disabled,\n  checkboxSize, // kept for backwards compatibility\n  checkboxStyle, // kept for backwards compatibility\n  checkboxLabelStyle, // kept for backwards compatibility\n  checkboxComponentStyles,\n  checkboxComponent,\n  listHeaderComponent,\n  listFooterComponent,\n  listComponentStyles,\n  modalProps,\n  hideModal = false,\n  listControls,\n  searchControls,\n  ...rest\n}) => {\n  const [newOptions, setNewOptions] = useState<TFlatList | TSectionList>([]);\n  const [open, setOpen] = useState<boolean>(false);\n  const [selectAll, setSelectAll] = useState<boolean>(false);\n  const [selectedItem, setSelectedItem] = useState<any>(''); // for single selection\n  const [selectedItems, setSelectedItems] = useState<any[]>([]); // for multiple selection\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [listIndex, setListIndex] = useState<{\n    sectionIndex?: number;\n    itemIndex: number;\n  }>({ itemIndex: -1, sectionIndex: -1 }); // for scrollToIndex in Sectionlist and Flatlist\n\n  useEffect(() => {\n    setNewOptions(options);\n    return () => {};\n  }, [options]);\n\n  useEffect(() => {\n    isMultiple\n      ? setSelectedItems(Array.isArray(selectedValue) ? selectedValue : [])\n      : setSelectedItem(selectedValue);\n\n    return () => {};\n  }, [selectedValue, isMultiple, onValueChange]);\n\n  /*===========================================\n   * List type\n   *==========================================*/\n\n  // check the structure of the new options array to determine if it is a section list or a\n  const isSectionList = newOptions?.some(\n    (item) => item.title && item.data && Array.isArray(item.data)\n  );\n\n  const ListTypeComponent = isSectionList\n    ? DropdownSectionList\n    : DropdownFlatList;\n  const modifiedSectionData = extractPropertyFromArray(\n    newOptions,\n    'data'\n  )?.flat();\n\n  /**\n   * `options` is the original array, it never changes. (Do not use except you really need the original array) .\n   * `newOptions` is a copy of options but can be mutated by `setNewOptions`, as a result, the value many change.\n   * `modifiedOptions` should only be used for computations. It has the same structure for both `FlatList` and `SectionList`\n   */\n  const modifiedOptions = isSectionList ? modifiedSectionData : newOptions;\n\n  const optLabel = optionLabel || DEFAULT_OPTION_LABEL;\n  const optValue = optionValue || DEFAULT_OPTION_VALUE;\n\n  /*===========================================\n   * Selection handlers\n   *==========================================*/\n  const handleSingleSelection = (value: string | number) => {\n    if (selectedItem === value) {\n      setSelectedItem(null);\n      onValueChange(null); // send value to parent\n    } else {\n      setSelectedItem(value);\n      onValueChange(value); // send value to parent\n      setOpen(false); // close modal upon selection\n    }\n  };\n\n  const handleMultipleSelections = (value: string[] | number[]) => {\n    setSelectedItems((prevVal) => {\n      let selectedValues = [...prevVal];\n\n      if (selectedValues?.includes(value)) {\n        selectedValues = selectedValues.filter((item) => item !== value);\n      } else {\n        selectedValues.push(value);\n      }\n      onValueChange(selectedValues); // send value to parent\n      return selectedValues;\n    });\n  };\n\n  const removeDisabledItems = (items: TFlatList) => {\n    return items?.filter((item: TFlatListItem) => !item.disabled);\n  };\n\n  const handleSelectAll = () => {\n    setSelectAll((prevVal) => {\n      const selectedValues = [];\n\n      // don't select disabled items\n      const filteredOptions = removeDisabledItems(\n        isSectionList\n          ? extractPropertyFromArray(options, 'data').flat()\n          : options\n      );\n\n      if (!prevVal) {\n        for (let i = 0; i < filteredOptions.length; i++) {\n          selectedValues.push(filteredOptions[i][optValue]);\n        }\n      }\n\n      setSelectedItems(selectedValues);\n      onValueChange(selectedValues); // send value to parent\n      return !prevVal;\n    });\n\n    if (typeof listControls?.selectAllCallback === 'function' && !selectAll) {\n      listControls.selectAllCallback();\n    }\n\n    if (typeof listControls?.unselectAllCallback === 'function' && selectAll) {\n      listControls.unselectAllCallback();\n    }\n  };\n\n  /*===========================================\n   * Handle side effects\n   *==========================================*/\n  const checkSelectAll = useCallback(\n    (selectedValues: any[]) => {\n      //if the list contains disabled values, those values will not be selected\n      if (\n        removeDisabledItems(modifiedOptions)?.length === selectedValues?.length\n      ) {\n        setSelectAll(true);\n      } else {\n        setSelectAll(false);\n      }\n    },\n    [modifiedOptions]\n  );\n\n  // anytime the selected items change, check if it is time to set `selectAll` to true\n  useEffect(() => {\n    if (isMultiple) {\n      checkSelectAll(selectedItems);\n    }\n    return () => {};\n  }, [checkSelectAll, isMultiple, selectedItems]);\n\n  /*===========================================\n   * Get label handler\n   *==========================================*/\n  const getSelectedItemsLabel = () => {\n    if (isMultiple && Array.isArray(selectedItems)) {\n      let selectedLabels: Array<string> = [];\n\n      selectedItems?.forEach((element: number | string) => {\n        let selectedItemLabel = modifiedOptions?.find(\n          (item: TFlatListItem) => item[optValue] === element\n        )?.[optLabel];\n        selectedLabels.push(selectedItemLabel);\n      });\n      return selectedLabels;\n    }\n\n    let selectedItemLabel = modifiedOptions?.find(\n      (item: TFlatListItem) => item[optValue] === selectedItem\n    );\n    return selectedItemLabel?.[optLabel];\n  };\n\n  /*===========================================\n   * Search\n   *==========================================*/\n  const onSearch = (value: string) => {\n    setSearchValue(value);\n\n    let searchText = escapeRegExp(value).toString().toLocaleLowerCase().trim();\n\n    const regexFilter = new RegExp(searchText, 'i');\n\n    // Because the options array will be mutated while searching, we have to search with the original array\n    const searchResults = isSectionList\n      ? searchSectionList(options as TSectionList, regexFilter)\n      : searchFlatList(options as TFlatList, regexFilter);\n\n    setNewOptions(searchResults);\n  };\n\n  const searchFlatList = (flatList: TFlatList, regexFilter: RegExp) => {\n    const searchResults = flatList.filter((item: TFlatListItem) => {\n      if (\n        item[optLabel].toString().toLowerCase().search(regexFilter) !== -1 ||\n        item[optValue].toString().toLowerCase().search(regexFilter) !== -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n    return searchResults;\n  };\n\n  const searchSectionList = (\n    sectionList: TSectionList,\n    regexFilter: RegExp\n  ) => {\n    const searchResults = sectionList.map((listItem: TSectionListItem) => {\n      const filteredData = listItem.data.filter((item: TFlatListItem) => {\n        if (\n          item[optLabel].toString().toLowerCase().search(regexFilter) !== -1 ||\n          item[optValue].toString().toLowerCase().search(regexFilter) !== -1\n        ) {\n          return true;\n        }\n        return false;\n      });\n\n      return { ...listItem, data: filteredData };\n    });\n\n    return searchResults;\n  };\n\n  /*===========================================\n   * Modal\n   *==========================================*/\n  const handleToggleModal = () => {\n    if (disabled) {\n      // protecting any toggleModal invocation when Dropdown is disabled by not activating state\n      return;\n    }\n    setOpen(!open);\n    setSearchValue('');\n    setNewOptions(options);\n    setListIndex({ itemIndex: -1, sectionIndex: -1 });\n  };\n\n  useEffect(() => {\n    if (hideModal) {\n      setOpen(false);\n    }\n    return () => {};\n  }, [hideModal]);\n\n  let primary = primaryColor || colors.gray;\n\n  /*===========================================\n   * setIndexOfSelectedItem - For ScrollToIndex\n   *==========================================*/\n  const setIndexOfSelectedItem = (selectedLabel: string) => {\n    isSectionList\n      ? (options as TSectionListItem[] | undefined)?.map(\n          (item: TSectionListItem, sectionIndex: number) => {\n            item?.data?.find((dataItem: TFlatListItem, itemIndex: number) => {\n              if (dataItem[optLabel] === selectedLabel) {\n                setListIndex({ sectionIndex, itemIndex });\n              }\n            });\n          }\n        )\n      : (options as TFlatListItem[] | undefined)?.find(\n          (item: TFlatListItem, itemIndex: number) => {\n            if (item[optLabel] === selectedLabel) {\n              setListIndex({ itemIndex });\n            }\n          }\n        );\n  };\n\n  return (\n    <>\n      <Dropdown\n        label={label}\n        placeholder={placeholder}\n        helperText={helperText}\n        error={error}\n        getSelectedItemsLabel={getSelectedItemsLabel}\n        selectedItem={selectedItem}\n        selectedItems={selectedItems}\n        handleToggleModal={handleToggleModal}\n        labelStyle={labelStyle}\n        dropdownIcon={dropdownIcon}\n        dropdownStyle={dropdownStyle}\n        dropdownIconStyle={dropdownIconStyle}\n        dropdownContainerStyle={dropdownContainerStyle}\n        dropdownErrorStyle={dropdownErrorStyle}\n        dropdownErrorTextStyle={dropdownErrorTextStyle}\n        dropdownHelperTextStyle={dropdownHelperTextStyle}\n        selectedItemStyle={selectedItemStyle}\n        multipleSelectedItemStyle={multipleSelectedItemStyle}\n        isMultiple={isMultiple}\n        primaryColor={primary}\n        disabled={disabled}\n        placeholderStyle={placeholderStyle}\n        setIndexOfSelectedItem={setIndexOfSelectedItem}\n        {...rest}\n      />\n      <CustomModal\n        open={open}\n        modalBackgroundStyle={modalBackgroundStyle}\n        modalOptionsContainerStyle={modalOptionsContainerStyle}\n        onRequestClose={() => handleToggleModal()}\n        modalProps={modalProps}\n      >\n        <ListTypeComponent\n          ListHeaderComponent={\n            <>\n              {isSearchable && (\n                <Input\n                  value={searchValue}\n                  onChangeText={(text: string) => onSearch(text)}\n                  style={searchControls?.textInputStyle || searchInputStyle}\n                  primaryColor={primary}\n                  textInputContainerStyle={\n                    searchControls?.textInputContainerStyle\n                  }\n                  placeholder={\n                    searchControls?.textInputProps?.placeholder || 'Search'\n                  }\n                  {...searchControls?.textInputProps}\n                />\n              )}\n              {listHeaderComponent}\n              {!listControls?.hideSelectAll &&\n                isMultiple &&\n                modifiedOptions?.length > 1 && (\n                  <View style={styles.optionsContainerStyle}>\n                    <TouchableOpacity onPress={() => {}}>\n                      <CheckBox\n                        value={selectAll}\n                        label={\n                          selectAll\n                            ? listControls?.unselectAllText || 'Clear all'\n                            : listControls?.selectAllText || 'Select all'\n                        }\n                        onChange={() => handleSelectAll()}\n                        primaryColor={primary}\n                        checkboxSize={checkboxSize}\n                        checkboxStyle={checkboxStyle}\n                        checkboxLabelStyle={checkboxLabelStyle}\n                        checkboxComponentStyles={checkboxComponentStyles}\n                        checkboxComponent={checkboxComponent}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                )}\n            </>\n          }\n          ListFooterComponent={listFooterComponent}\n          listComponentStyles={listComponentStyles}\n          options={newOptions}\n          optionLabel={optLabel}\n          optionValue={optValue}\n          isMultiple={isMultiple}\n          isSearchable={isSearchable}\n          selectedItems={selectedItems}\n          selectedItem={selectedItem}\n          handleMultipleSelections={handleMultipleSelections}\n          handleSingleSelection={handleSingleSelection}\n          primaryColor={primary}\n          checkboxSize={checkboxSize}\n          checkboxStyle={checkboxStyle}\n          checkboxLabelStyle={checkboxLabelStyle}\n          checkboxComponentStyles={checkboxComponentStyles}\n          checkboxComponent={checkboxComponent}\n          listIndex={listIndex}\n          emptyListMessage={listControls?.emptyListMessage}\n        />\n      </CustomModal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  optionsContainerStyle: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    flexDirection: 'row',\n  },\n});\n\nexport default DropdownSelect;\n"],"mappings":"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"}